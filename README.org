* My Telegram Bot

  A repository containing the bots developed in Scala.

** Installation

   Details regarding the installation and run of the bots

*** Prerequisites

    Download the Data. Ask benkio: [[https://benkio.github.io][benkio.github.io]]

**** Software
    - [[https://git-scm.com/][git]]
    - [[https://www.scala-sbt.org/][sbt - Scala Build Tool]]
    - [[https://www.scala-lang.org/][scala]]

*** Installation

**** Clone the Repository

#+begin_src bash
  git clone git@github.com:benkio/myTelegramBot.git
#+end_src

**** Move the Data into Resources Directory

     Earch bot contains a ~resources~ folder. You need to
     uncompress/move the data and put the files in each of the bot's
     resource folders. Put particular attention to the ~.token~ file
     contanining the telegram key specific to each bot.

**** Compile and Test

     Just run the following commands in a shell, at the bot folder
     level, to check if everything is fine.

#+begin_src bash
  sbt compile
  sbt test:compile
  sbt fix
  sbt test
#+end_src

*** Run the Bots

**** Long Polling
       Under windows use the git bash terminal.

   #+begin_src bash
     ./lunch.sh # I know it's lunch not launch :)
   #+end_src

**** Webhook

***** Localhost

     - Export the webhook host, locally using [[https://ngrok.com/][ngrok]], [[https://github.com/beyondcode/expose][expose]] or [[https://github.com/agrinman/tunnelto][tunnelTo]]. example: ~./expose share http://localhost:8080~
     - Change the entry ~WEBHOOK_HOST_URL~ with the name of the host from previous step or change it in ~~myTelegramBot/main/src/main/resources/application.conf~
     - run ~sbt assembly~
     - run ~java -cp main/target/scala-2.13/main.jar com.benkio.main.MainWebhook~

***** Docker

      TODO: There's already a ~main/Dockerfile~ with the command to run the webhook, but still it needs to be tested and visible from outside
            Also check [[https://expose.dev/docs/getting-started/installation#as-a-docker-container][expose on docker]]. In order to may make it discoverable from telegram api.

*** Deploy on Heroku (Not working yet)

**** Method 1
   - Check ~application.conf~
   - Create a fat jar

   #+begin_src bash
     sbt main/assembly
   #+end_src

   - Be sure is <500MB (heroku free tier)
   - Upload it to [[http://transfer.sh/][transfer.sh]]
   - Enter heroku dyno with ~heroku run bash~
   - Download the jar with curl
   - Run the java with ~java -cp main.jar com.benkio.main.MainWebhook~

**** Method 2
#+begin_src bash
  sbt main/assebly
  cd main
  docker build .
  heroku login
  heroku container:login
  heroku container:push web
  heroku container:release web
#+end_src

*** Next Development Ideas
**** General(Maybe) Development
    - [X] TextReply needs to allow side effects with Message => F[List[String]]. This enable to access resources depending on message text
    - [ ] Twitch support
    - [ ] Discord support
    - [ ] Slack support
    - [ ] Telegram Webhook (tested locally, not deployed)
    - [ ] Anti-spam filter (https://github.com/benkio/myTelegramBot/issues/45)
**** Richard Philip Henry John Benson Bot
    - [X] Add all the videos from https://t.me/ilsimposioinfernale
    - [X] Add a command for Random Benson's show youtube link: eg. from the channel Brigate Benson
    - [X] Add a command for a Benson's show by keyword in the title
    - [ ] Add a auto reply on the group join sending: /Chi Ã¨ questa persona scusate, eh?/
    - [ ] Add a schedule that shares a random youtube show every friday at 22 CET
**** Xah Bot
    - [X] Add a command for a random xah's talk show youtube link
    - [X] Add a command for a xah's talk show by keyword in the title
**** Barbero Bot
    - [X] Add a command for a random barbero's talk show youtube link
    - [X] Add a command for a barbero's talk show by keyword in the title
